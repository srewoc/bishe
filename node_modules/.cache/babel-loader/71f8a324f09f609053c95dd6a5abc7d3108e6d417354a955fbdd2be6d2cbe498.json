{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_cascader_panel = _resolveComponent(\"el-cascader-panel\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_el_cascader_panel, {\n    class: \"panel\",\n    options: $setup.options,\n    onChange: $setup.select\n  }, null, 8 /* PROPS */, [\"options\"]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.questions, (question, index) => {\n    return _openBlock(), _createBlock(_component_el_button, {\n      key: index,\n      class: _normalizeClass({\n        'answered': question.answered,\n        'current': _ctx.currentQuestionIndex === index\n      }),\n      onClick: $event => _ctx.goToQuestion(index)\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(index + 1) + \" \", 1 /* TEXT */), _createCommentVNode(\" 显示题号 \")]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"class\", \"onClick\"]);\n  }), 128 /* KEYED_FRAGMENT */))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createVNode","_component_el_cascader_panel","class","options","$setup","onChange","select","_renderList","_ctx","questions","question","index","_createBlock","_component_el_button","key","_normalizeClass","answered","currentQuestionIndex","onClick","$event","goToQuestion","default","_withCtx","_createTextVNode","_toDisplayString","_createCommentVNode","_"],"sources":["C:\\Users\\C\\Desktop\\bishe\\src\\components\\student\\ChapterSelect.vue"],"sourcesContent":["<template>\r\n  <el-cascader-panel class=\"panel\" :options=\"options\" @change=\"select\"/>\r\n  <el-button\r\n      v-for=\"(question, index) in questions\"\r\n      :key=\"index\"\r\n      :class=\"{\r\n              'answered': question.answered,\r\n              'current': currentQuestionIndex === index\r\n            }\"\r\n      @click=\"goToQuestion(index)\"\r\n  >\r\n    {{ index + 1 }} <!-- 显示题号 -->\r\n  </el-button>\r\n\r\n</template>\r\n\r\n<script setup>\r\nimport axios from \"axios\";\r\nimport {ref} from \"vue\";\r\nimport {useRouter} from \"vue-router\";\r\nconst router = useRouter();\r\n\r\nlet options = ref([]);\r\n\r\naxios.get('http://localhost:8080/chapterselect').then((response) => {\r\n  options.value = response.data.data;\r\n});\r\n\r\nconst select = (val) => {\r\n  router.push({path: '/problems', query: String(val.at(-1))});\r\n}\r\n\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.panel {\r\n  width: fit-content;\r\n  height: 600px;\r\n}\r\n</style>"],"mappings":";;;;uBAAAA,mBAAA,CAAAC,SAAA,SACEC,YAAA,CAAsEC,4BAAA;IAAnDC,KAAK,EAAC,OAAO;IAAEC,OAAO,EAAEC,MAAA,CAAAD,OAAO;IAAGE,QAAM,EAAED,MAAA,CAAAE;2DAC7DR,mBAAA,CAUYC,SAAA,QAZdQ,WAAA,CAGkCC,IAAA,CAAAC,SAAS,EAH3C,CAGcC,QAAQ,EAAEC,KAAK;yBAD3BC,YAAA,CAUYC,oBAAA;MARPC,GAAG,EAAEH,KAAK;MACVT,KAAK,EALZa,eAAA;oBAK2CL,QAAQ,CAACM,QAAQ;mBAA4BR,IAAA,CAAAS,oBAAoB,KAAKN;;MAI1GO,OAAK,EAAAC,MAAA,IAAEX,IAAA,CAAAY,YAAY,CAACT,KAAK;;MAThCU,OAAA,EAAAC,QAAA,CAWI,MAAe,CAXnBC,gBAAA,CAAAC,gBAAA,CAWOb,KAAK,QAAO,GAAC,iBAAAc,mBAAA,UAAa,C;MAXjCC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}