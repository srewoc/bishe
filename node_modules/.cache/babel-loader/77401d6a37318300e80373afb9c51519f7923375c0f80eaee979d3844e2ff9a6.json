{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    class: \"login-card\"\n  }, {\n    default: _withCtx(() => [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"登录\", -1 /* HOISTED */)), _createVNode(_component_el_form, {\n      model: $data.form,\n      ref: \"form\",\n      rules: $data.rules,\n      \"label-width\": \"100px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"角色\",\n        prop: \"type\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $data.form.type,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.type = $event),\n          placeholder: \"请选择角色\",\n          required: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_option, {\n            label: \"管理员\",\n            value: 1\n          }), _createVNode(_component_el_option, {\n            label: \"学生\",\n            value: 0\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"账号\",\n        prop: \"username\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.form.username,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.form.username = $event),\n          required: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"密码\",\n        prop: \"password\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          type: \"password\",\n          modelValue: $data.form.password,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.form.password = $event),\n          required: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: $options.handleSubmit\n        }, {\n          default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"登录\")])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\", \"rules\"])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","default","_withCtx","_createElementVNode","_component_el_form","model","$data","form","ref","rules","_component_el_form_item","label","prop","_component_el_select","modelValue","type","_cache","$event","placeholder","required","_component_el_option","value","_","_component_el_input","username","password","_component_el_button","onClick","$options","handleSubmit","_createTextVNode"],"sources":["C:\\Users\\C\\Desktop\\bishe\\src\\components\\LoginForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <el-card class=\"login-card\">\r\n      <h2>登录</h2>\r\n      <el-form :model=\"form\" ref=\"form\" :rules=\"rules\" label-width=\"100px\">\r\n        <el-form-item label=\"角色\" prop=\"type\">\r\n          <el-select v-model=\"form.type\" placeholder=\"请选择角色\" required>\r\n            <el-option label=\"管理员\" :value=\"1\"></el-option>\r\n            <el-option label=\"学生\" :value=\"0\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"账号\" prop=\"username\">\r\n          <el-input v-model=\"form.username\" required></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input type=\"password\" v-model=\"form.password\" required></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleSubmit\" >登录</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport {ElMessage} from \"element-plus\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {\r\n        type: null,\r\n        username: '',\r\n        password: '',\r\n      },\r\n      rules: {\r\n        type: [\r\n          {required: true, message: '请选择角色', trigger: 'change'},\r\n        ],\r\n        username: [\r\n          {required: true, message: '请输入账号', trigger: 'blur'},\r\n        ],\r\n        password: [\r\n          {required: true, message: '请输入密码', trigger: 'blur'},\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    async handleSubmit() {\r\n\r\n      if (this.form.type !== null && this.form.username !== '' && this.form.password !== '') {\r\n        try {\r\n          const response = await axios.post('http://localhost:8080/login', {\r\n            username: this.form.username,\r\n            password: this.form.password,\r\n            type: this.form.type,\r\n          });\r\n          if(response.data.code === 0){\r\n            ElMessage.error(response.data.msg);\r\n          }\r\n          else{\r\n            console.log(response);\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 90vh;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.login-card {\r\n  width: 400px;\r\n  padding: 20px;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;;;;;;;;uBAA5BC,mBAAA,CAqBM,OArBNC,UAqBM,GApBJC,YAAA,CAmBUC,kBAAA;IAnBDJ,KAAK,EAAC;EAAY;IAF/BK,OAAA,EAAAC,QAAA,CAGM,MAAW,C,0BAAXC,mBAAA,CAAW,YAAP,IAAE,sBACNJ,YAAA,CAgBUK,kBAAA;MAhBAC,KAAK,EAAEC,KAAA,CAAAC,IAAI;MAAEC,GAAG,EAAC,MAAM;MAAEC,KAAK,EAAEH,KAAA,CAAAG,KAAK;MAAE,aAAW,EAAC;;MAJnER,OAAA,EAAAC,QAAA,CAKQ,MAKe,CALfH,YAAA,CAKeW,uBAAA;QALDC,KAAK,EAAC,IAAI;QAACC,IAAI,EAAC;;QALtCX,OAAA,EAAAC,QAAA,CAMU,MAGY,CAHZH,YAAA,CAGYc,oBAAA;UATtBC,UAAA,EAM8BR,KAAA,CAAAC,IAAI,CAACQ,IAAI;UANvC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAM8BX,KAAA,CAAAC,IAAI,CAACQ,IAAI,GAAAE,MAAA;UAAEC,WAAW,EAAC,OAAO;UAACC,QAAQ,EAAR;;UAN7DlB,OAAA,EAAAC,QAAA,CAOY,MAA8C,CAA9CH,YAAA,CAA8CqB,oBAAA;YAAnCT,KAAK,EAAC,KAAK;YAAEU,KAAK,EAAE;cAC/BtB,YAAA,CAA6CqB,oBAAA;YAAlCT,KAAK,EAAC,IAAI;YAAEU,KAAK,EAAE;;UAR1CC,CAAA;;QAAAA,CAAA;UAWQvB,YAAA,CAEeW,uBAAA;QAFDC,KAAK,EAAC,IAAI;QAACC,IAAI,EAAC;;QAXtCX,OAAA,EAAAC,QAAA,CAYU,MAAsD,CAAtDH,YAAA,CAAsDwB,mBAAA;UAZhET,UAAA,EAY6BR,KAAA,CAAAC,IAAI,CAACiB,QAAQ;UAZ1C,uBAAAR,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAY6BX,KAAA,CAAAC,IAAI,CAACiB,QAAQ,GAAAP,MAAA;UAAEE,QAAQ,EAAR;;QAZ5CG,CAAA;UAcQvB,YAAA,CAEeW,uBAAA;QAFDC,KAAK,EAAC,IAAI;QAACC,IAAI,EAAC;;QAdtCX,OAAA,EAAAC,QAAA,CAeU,MAAsE,CAAtEH,YAAA,CAAsEwB,mBAAA;UAA5DR,IAAI,EAAC,UAAU;UAfnCD,UAAA,EAe6CR,KAAA,CAAAC,IAAI,CAACkB,QAAQ;UAf1D,uBAAAT,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAe6CX,KAAA,CAAAC,IAAI,CAACkB,QAAQ,GAAAR,MAAA;UAAEE,QAAQ,EAAR;;QAf5DG,CAAA;UAiBQvB,YAAA,CAEeW,uBAAA;QAnBvBT,OAAA,EAAAC,QAAA,CAkBU,MAA+D,CAA/DH,YAAA,CAA+D2B,oBAAA;UAApDX,IAAI,EAAC,SAAS;UAAEY,OAAK,EAAEC,QAAA,CAAAC;;UAlB5C5B,OAAA,EAAAC,QAAA,CAkB2D,MAAEc,MAAA,QAAAA,MAAA,OAlB7Dc,gBAAA,CAkB2D,IAAE,E;UAlB7DR,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}