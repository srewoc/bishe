{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"c\"\n};\nconst _hoisted_2 = {\n  \"slot-scope\": \"{ node, data }\"\n};\nconst _hoisted_3 = {\n  class: \"bt\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_cascader_panel = _resolveComponent(\"el-cascader-panel\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_cascader_panel, {\n    class: \"panel\",\n    options: $setup.options,\n    props: {\n      checkStrictly: true\n    }\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"template\", _hoisted_2, [_createElementVNode(\"div\", {\n      onClick: _cache[0] || (_cache[0] = $event => _ctx.handleSelect(_ctx.node, _ctx.data))\n    }, [_createElementVNode(\"span\", null, _toDisplayString(_ctx.data.label), 1 /* TEXT */)])])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"options\"]), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.questions, (question, index) => {\n    return _openBlock(), _createBlock(_component_el_button, {\n      key: question.uid,\n      class: _normalizeClass({\n        'answered': question.answered,\n        'current': $setup.currentQuestionIndex === index\n      }),\n      onClick: $event => $setup.goToQuestion(question.uid)\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(question.uid), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"class\", \"onClick\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_cascader_panel","options","$setup","props","checkStrictly","default","_withCtx","_createElementVNode","_hoisted_2","onClick","_cache","$event","_ctx","handleSelect","node","data","_toDisplayString","label","_","_hoisted_3","_Fragment","_renderList","questions","question","index","_createBlock","_component_el_button","key","uid","_normalizeClass","answered","currentQuestionIndex","goToQuestion","_createTextVNode"],"sources":["C:\\Users\\C\\Desktop\\bishe\\src\\components\\student\\ChapterSelect.vue"],"sourcesContent":["<template>\r\n  <div class=\"c\">\r\n    <el-cascader-panel class=\"panel\" :options=\"options\" :props=\"{ checkStrictly: true }\">\r\n      <template slot-scope=\"{ node, data }\">\r\n        <div @click=\"handleSelect(node, data)\">\r\n          <span>{{ data.label }}</span>\r\n        </div>\r\n      </template>\r\n    </el-cascader-panel >\r\n    <div class=\"bt\">\r\n      <el-button\r\n          v-for=\"(question, index) in questions\"\r\n          :key=\"question.uid\"\r\n          :class=\"{\r\n              'answered': question.answered,\r\n              'current': currentQuestionIndex === index\r\n            }\"\r\n          @click=\"goToQuestion(question.uid)\"\r\n      >\r\n        {{ question.uid }}\r\n      </el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport axios from \"axios\";\r\nimport {ref} from \"vue\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\nconst router = useRouter();\r\n\r\nlet options = ref([]);\r\n\r\nlet currentQuestionIndex = ref(-1);\r\n\r\naxios.get('http://localhost:8080/chapterselect').then((response) => {\r\n  options.value = response.data.data;\r\n});\r\n\r\nlet questions = ref([]);\r\n\r\n// const select = (val) => {\r\n//   axios.get('http://localhost:8080/chapter' + val.at(-1)).then((response) => {\r\n//     questions.value = response.data;\r\n//   })\r\n// };\r\nconst goToQuestion = (uid) => {\r\n  router.push({\r\n    path: `/problems/${uid}`,\r\n    params:{\r\n      qus : questions\r\n    }\r\n  })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.panel {\r\n  width: fit-content;\r\n  height: fit-content;\r\n}\r\n\r\n\r\n\r\n.bt {\r\n  display: grid;\r\n  grid-template-columns: repeat(19, 0fr);\r\n  grid-gap: 10px;\r\n  .el-button{\r\n    margin-left: 0;\r\n  }\r\n}\r\n\r\n.answered {\r\n  background-color: #6CC747;\r\n  color: #fff;\r\n}\r\n\r\n.current {\r\n  background-color: #58AAFB;\r\n  color: #fff;\r\n}\r\n\r\n\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAG;;EAEA,YAAU,EAAC;AAAgB;;EAMlCA,KAAK,EAAC;AAAI;;;;uBARjBC,mBAAA,CAqBM,OArBNC,UAqBM,GApBJC,YAAA,CAMqBC,4BAAA;IANFJ,KAAK,EAAC,OAAO;IAAEK,OAAO,EAAEC,MAAA,CAAAD,OAAO;IAAGE,KAAK,EAAE;MAAAC,aAAA;IAAA;;IAFhEC,OAAA,EAAAC,QAAA,CAGM,MAIW,CAJXC,mBAAA,CAIW,YAJXC,UAIW,GAHTD,mBAAA,CAEM;MAFAE,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,YAAY,CAACD,IAAA,CAAAE,IAAI,EAAEF,IAAA,CAAAG,IAAI;QAClCR,mBAAA,CAA6B,cAAAS,gBAAA,CAApBJ,IAAA,CAAAG,IAAI,CAACE,KAAK,iB;IAL7BC,CAAA;kCASIX,mBAAA,CAYM,OAZNY,UAYM,I,kBAXJtB,mBAAA,CAUYuB,SAAA,QApBlBC,WAAA,CAWsCnB,MAAA,CAAAoB,SAAS,EAX/C,CAWkBC,QAAQ,EAAEC,KAAK;yBAD3BC,YAAA,CAUYC,oBAAA;MARPC,GAAG,EAAEJ,QAAQ,CAACK,GAAG;MACjBhC,KAAK,EAbhBiC,eAAA;oBAa+CN,QAAQ,CAACO,QAAQ;mBAA4B5B,MAAA,CAAA6B,oBAAoB,KAAKP;;MAI1Gf,OAAK,EAAAE,MAAA,IAAET,MAAA,CAAA8B,YAAY,CAACT,QAAQ,CAACK,GAAG;;MAjB3CvB,OAAA,EAAAC,QAAA,CAmBQ,MAAkB,CAnB1B2B,gBAAA,CAAAjB,gBAAA,CAmBWO,QAAQ,CAACK,GAAG,iB;MAnBvBV,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}