{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport axios from \"axios\";\nimport { ElMessage } from \"element-plus\";\nimport { useRouter } from \"vue-router\";\nconst __default__ = {\n  name: \"LoginForm\",\n  data() {\n    return {\n      form: {\n        type: null,\n        username: '',\n        password: ''\n      },\n      rules: {\n        type: [{\n          required: true,\n          message: '请选择角色',\n          trigger: 'change'\n        }],\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    handleSubmit() {\n      const route = useRouter();\n      console.log(route);\n      if (this.form.type !== null && this.form.username !== '' && this.form.password !== '') {\n        axios.post('/api/login', {\n          username: this.form.username,\n          password: this.form.password,\n          type: this.form.type\n        }).then(response => {\n          if (response.data.code === 0) {\n            ElMessage.error(response.data.msg);\n          } else {\n            ElMessage.success(\"登录成功\");\n            route.push({\n              path: '/dashboard'\n            });\n          }\n        });\n      }\n    }\n  }\n};\nexport default /*@__PURE__*/Object.assign(__default__, {\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const form = ref({\n      type: null,\n      username: '',\n      password: ''\n    });\n    const rules = {\n      type: [{\n        required: true,\n        message: '请选择角色',\n        trigger: 'change'\n      }],\n      username: [{\n        required: true,\n        message: '请输入账号',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }]\n    };\n    const router = useRouter();\n    const handleSubmit = () => {\n      if (form.value.type !== null && form.value.username !== '' && form.value.password !== '') {\n        axios.post('/api/login', {\n          username: form.value.username,\n          password: form.value.password,\n          type: form.value.type\n        }).then(response => {\n          if (response.data.code === 0) {\n            ElMessage.error(response.data.msg);\n          } else {\n            ElMessage.success(\"登录成功\");\n            router.push({\n              path: '/dashboard'\n            });\n          }\n        });\n      }\n    };\n    const __returned__ = {\n      form,\n      rules,\n      router,\n      handleSubmit,\n      get axios() {\n        return axios;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n});","map":{"version":3,"names":["ref","axios","ElMessage","useRouter","__default__","name","data","form","type","username","password","rules","required","message","trigger","methods","handleSubmit","route","console","log","post","then","response","code","error","msg","success","push","path","router","value"],"sources":["C:/Users/C/Desktop/bishe/src/components/LoginForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <el-card class=\"login-card\">\r\n      <h2>登录</h2>\r\n      <el-form :model=\"form\" ref=\"form\" :rules=\"rules\" label-width=\"100px\">\r\n        <el-form-item label=\"角色\" prop=\"type\">\r\n          <el-select v-model=\"form.type\" placeholder=\"请选择角色\" required>\r\n            <el-option label=\"管理员\" :value=\"1\"></el-option>\r\n            <el-option label=\"学生\" :value=\"0\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"账号\" prop=\"username\">\r\n          <el-input v-model=\"form.username\" required></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input type=\"password\" v-model=\"form.password\" required></el-input>\r\n        </el-form-item>\r\n        <el-form-item class=\"button\">\r\n          <el-button type=\"primary\" @click=\"handleSubmit\">登录</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'vue-router';\r\nimport { ElMessage } from 'element-plus';\r\n\r\nconst form = ref({\r\n  type: null,\r\n  username: '',\r\n  password: '',\r\n});\r\n\r\nconst rules = {\r\n  type: [\r\n    { required: true, message: '请选择角色', trigger: 'change' },\r\n  ],\r\n  username: [\r\n    { required: true, message: '请输入账号', trigger: 'blur' },\r\n  ],\r\n  password: [\r\n    { required: true, message: '请输入密码', trigger: 'blur' },\r\n  ],\r\n};\r\n\r\nconst router = useRouter();\r\n\r\nconst handleSubmit = () => {\r\n  if (form.value.type !== null && form.value.username !== '' && form.value.password !== '') {\r\n    axios.post('/api/login', {\r\n      username: form.value.username,\r\n      password: form.value.password,\r\n      type: form.value.type,\r\n    }).then(response => {\r\n      if (response.data.code === 0) {\r\n        ElMessage.error(response.data.msg);\r\n      } else {\r\n        ElMessage.success(\"登录成功\");\r\n        router.push({\r\n          path: '/dashboard',\r\n        });\r\n      }\r\n    });\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport {ElMessage} from \"element-plus\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\n\r\nexport default {\r\n  name: \"LoginForm\",\r\n  data() {\r\n    return {\r\n      form: {\r\n        type: null,\r\n        username: '',\r\n        password: '',\r\n      },\r\n      rules: {\r\n        type: [\r\n          {required: true, message: '请选择角色', trigger: 'change'},\r\n        ],\r\n        username: [\r\n          {required: true, message: '请输入账号', trigger: 'blur'},\r\n        ],\r\n        password: [\r\n          {required: true, message: '请输入密码', trigger: 'blur'},\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    handleSubmit() {\r\n      const route = useRouter();\r\n      console.log(route);\r\n      if (this.form.type !== null && this.form.username !== '' && this.form.password !== '') {\r\n        axios.post('/api/login', {\r\n          username: this.form.username,\r\n          password: this.form.password,\r\n          type: this.form.type,\r\n        }).then(response => {\r\n          if (response.data.code === 0) {\r\n            ElMessage.error(response.data.msg);\r\n          } else {\r\n            ElMessage.success(\"登录成功\");\r\n            route.push({\r\n              path: '/dashboard'\r\n            });\r\n          }\r\n        })\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: #f5f5f5;\r\n\r\n}\r\n\r\n.login-card {\r\n  display: flex;\r\n  width: 500px;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}