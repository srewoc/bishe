{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport { ElMessage } from \"element-plus\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  name: \"LoginForm\",\n  data() {\n    return {\n      form: {\n        type: null,\n        username: '',\n        password: ''\n      },\n      rules: {\n        type: [{\n          required: true,\n          message: '请选择角色',\n          trigger: 'change'\n        }],\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    handleSubmit() {\n      const route = useRouter();\n      if (this.form.type !== null && this.form.username !== '' && this.form.password !== '') {\n        axios.post('/api/login', {\n          username: this.form.username,\n          password: this.form.password,\n          type: this.form.type\n        }).then(response => {\n          if (response.data.code === 0) {\n            ElMessage.error(response.data.msg);\n          } else {\n            ElMessage.success(\"登录成功\");\n            route.push({\n              path: '/dashboard'\n            });\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","ElMessage","useRouter","name","data","form","type","username","password","rules","required","message","trigger","methods","handleSubmit","route","post","then","response","code","error","msg","success","push","path"],"sources":["C:\\Users\\C\\Desktop\\bishe\\src\\components\\LoginForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <el-card class=\"login-card\">\r\n      <h2>登录</h2>\r\n      <el-form :model=\"form\" ref=\"form\" :rules=\"rules\" label-width=\"100px\">\r\n        <el-form-item label=\"角色\" prop=\"type\">\r\n          <el-select v-model=\"form.type\" placeholder=\"请选择角色\" required>\r\n            <el-option label=\"管理员\" :value=\"1\"></el-option>\r\n            <el-option label=\"学生\" :value=\"0\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"账号\" prop=\"username\">\r\n          <el-input v-model=\"form.username\" required></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input type=\"password\" v-model=\"form.password\" required></el-input>\r\n        </el-form-item>\r\n        <el-form-item class=\"button\">\r\n          <el-button type=\"primary\" @click=\"handleSubmit\">登录</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<!--<script setup>-->\r\n<!--import { ref } from 'vue';-->\r\n<!--import axios from 'axios';-->\r\n<!--import { useRouter } from 'vue-router';-->\r\n<!--import { ElMessage } from 'element-plus';-->\r\n\r\n<!--const form = ref({-->\r\n<!--  type: null,-->\r\n<!--  username: '',-->\r\n<!--  password: '',-->\r\n<!--});-->\r\n\r\n<!--const rules = {-->\r\n<!--  type: [-->\r\n<!--    { required: true, message: '请选择角色', trigger: 'change' },-->\r\n<!--  ],-->\r\n<!--  username: [-->\r\n<!--    { required: true, message: '请输入账号', trigger: 'blur' },-->\r\n<!--  ],-->\r\n<!--  password: [-->\r\n<!--    { required: true, message: '请输入密码', trigger: 'blur' },-->\r\n<!--  ],-->\r\n<!--};-->\r\n\r\n<!--const router = useRouter();-->\r\n\r\n<!--const handleSubmit = () => {-->\r\n<!--  if (form.value.type !== null && form.value.username !== '' && form.value.password !== '') {-->\r\n<!--    axios.post('/api/login', {-->\r\n<!--      username: form.value.username,-->\r\n<!--      password: form.value.password,-->\r\n<!--      type: form.value.type,-->\r\n<!--    }).then(response => {-->\r\n<!--      if (response.data.code === 0) {-->\r\n<!--        ElMessage.error(response.data.msg);-->\r\n<!--      } else {-->\r\n<!--        ElMessage.success(\"登录成功\");-->\r\n<!--        router.push({-->\r\n<!--          path: '/dashboard',-->\r\n<!--        });-->\r\n<!--      }-->\r\n<!--    });-->\r\n<!--  }-->\r\n<!--};-->\r\n<!--</script>-->\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport {ElMessage} from \"element-plus\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\n\r\nexport default {\r\n  name: \"LoginForm\",\r\n  data() {\r\n    return {\r\n      form: {\r\n        type: null,\r\n        username: '',\r\n        password: '',\r\n      },\r\n      rules: {\r\n        type: [\r\n          {required: true, message: '请选择角色', trigger: 'change'},\r\n        ],\r\n        username: [\r\n          {required: true, message: '请输入账号', trigger: 'blur'},\r\n        ],\r\n        password: [\r\n          {required: true, message: '请输入密码', trigger: 'blur'},\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    handleSubmit() {\r\n      const route = useRouter();\r\n      if (this.form.type !== null && this.form.username !== '' && this.form.password !== '') {\r\n        axios.post('/api/login', {\r\n          username: this.form.username,\r\n          password: this.form.password,\r\n          type: this.form.type,\r\n        }).then(response => {\r\n          if (response.data.code === 0) {\r\n            ElMessage.error(response.data.msg);\r\n          } else {\r\n            ElMessage.success(\"登录成功\");\r\n            route.push({\r\n              path: '/dashboard'\r\n            });\r\n          }\r\n        })\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: #f5f5f5;\r\n\r\n}\r\n\r\n.login-card {\r\n  display: flex;\r\n  width: 500px;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n</style>"],"mappings":";AAyEA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAAQC,SAAS,QAAO,cAAc;AACtC,SAAQC,SAAS,QAAO,YAAY;AAGpC,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,IAAI,EAAE,IAAI;QACVC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLH,IAAI,EAAE,CACJ;UAACI,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,OAAO;UAAEC,OAAO,EAAE;QAAQ,CAAC,CACtD;QACDL,QAAQ,EAAE,CACR;UAACG,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,OAAO;UAAEC,OAAO,EAAE;QAAM,CAAC,CACpD;QACDJ,QAAQ,EAAE,CACR;UAACE,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,OAAO;UAAEC,OAAO,EAAE;QAAM,CAAC;MAEvD;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,MAAMC,KAAI,GAAIb,SAAS,CAAC,CAAC;MACzB,IAAI,IAAI,CAACG,IAAI,CAACC,IAAG,KAAM,IAAG,IAAK,IAAI,CAACD,IAAI,CAACE,QAAO,KAAM,EAAC,IAAK,IAAI,CAACF,IAAI,CAACG,QAAO,KAAM,EAAE,EAAE;QACrFR,KAAK,CAACgB,IAAI,CAAC,YAAY,EAAE;UACvBT,QAAQ,EAAE,IAAI,CAACF,IAAI,CAACE,QAAQ;UAC5BC,QAAQ,EAAE,IAAI,CAACH,IAAI,CAACG,QAAQ;UAC5BF,IAAI,EAAE,IAAI,CAACD,IAAI,CAACC;QAClB,CAAC,CAAC,CAACW,IAAI,CAACC,QAAO,IAAK;UAClB,IAAIA,QAAQ,CAACd,IAAI,CAACe,IAAG,KAAM,CAAC,EAAE;YAC5BlB,SAAS,CAACmB,KAAK,CAACF,QAAQ,CAACd,IAAI,CAACiB,GAAG,CAAC;UACpC,OAAO;YACLpB,SAAS,CAACqB,OAAO,CAAC,MAAM,CAAC;YACzBP,KAAK,CAACQ,IAAI,CAAC;cACTC,IAAI,EAAE;YACR,CAAC,CAAC;UACJ;QACF,CAAC;MACH;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}