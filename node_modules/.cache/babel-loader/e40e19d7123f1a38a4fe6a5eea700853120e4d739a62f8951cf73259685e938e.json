{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport axios from \"axios\";\nimport { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  __name: 'ChapterSelect',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    let options = ref([]);\n    let currentQuestionIndex = ref(-1);\n    axios.get('http://localhost:8080/chapterselect').then(response => {\n      options.value = response.data.data;\n    });\n    let questions = ref([]);\n    const select = val => {\n      axios.get('http://localhost:8080/chapter' + val).then(response => {\n        questions.value = response.data;\n      });\n    };\n    const handleItemClick = (node, data) => {\n      // 阻止默认点击行为（可选）\n      // node.handleClick() // 如果需要保留默认行为（如展开下级）\n\n      select(data.value);\n      console.log('点击节点:', {\n        level: node.level,\n        label: data.label,\n        value: data.value,\n        path: node.pathNodes.map(n => n.label) // 获取完整路径\n      });\n\n      // 这里可以执行你的自定义逻辑\n      // 例如：跳转路由、显示详细信息等\n    };\n    const goToQuestion = uid => {\n      router.push({\n        path: `/problems/${uid}`,\n        params: {\n          qus: questions\n        }\n      });\n    };\n    const __returned__ = {\n      router,\n      get options() {\n        return options;\n      },\n      set options(v) {\n        options = v;\n      },\n      get currentQuestionIndex() {\n        return currentQuestionIndex;\n      },\n      set currentQuestionIndex(v) {\n        currentQuestionIndex = v;\n      },\n      get questions() {\n        return questions;\n      },\n      set questions(v) {\n        questions = v;\n      },\n      select,\n      handleItemClick,\n      goToQuestion,\n      get axios() {\n        return axios;\n      },\n      ref,\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["axios","ref","useRouter","router","options","currentQuestionIndex","get","then","response","value","data","questions","select","val","handleItemClick","node","console","log","level","label","path","pathNodes","map","n","goToQuestion","uid","push","params","qus"],"sources":["C:/Users/C/Desktop/bishe/src/components/student/ChapterSelect.vue"],"sourcesContent":["<template>\r\n  <div class=\"c\">\r\n    <el-cascader-panel class=\"panel\" :options=\"options\" :props=\"{ checkStrictly: true  }\">\r\n      <template #default=\"{ node, data }\">\r\n        <!-- 自定义节点内容 -->\r\n        <span @click=\"handleItemClick(node, data)\">\r\n        {{ data.label }}\r\n      </span>\r\n      </template>\r\n    </el-cascader-panel >\r\n    <div class=\"bt\">\r\n      <el-button\r\n          v-for=\"(question, index) in questions\"\r\n          :key=\"question.uid\"\r\n          :class=\"{\r\n              'answered': question.answered,\r\n              'current': currentQuestionIndex === index\r\n            }\"\r\n          @click=\"goToQuestion(question.uid)\"\r\n      >\r\n        {{ question.uid }}\r\n      </el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport axios from \"axios\";\r\nimport {ref} from \"vue\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\nconst router = useRouter();\r\n\r\nlet options = ref([]);\r\n\r\nlet currentQuestionIndex = ref(-1);\r\n\r\naxios.get('http://localhost:8080/chapterselect').then((response) => {\r\n  options.value = response.data.data;\r\n});\r\n\r\nlet questions = ref([]);\r\n\r\nconst select = (val) => {\r\n  axios.get('http://localhost:8080/chapter' + val).then((response) => {\r\n    questions.value = response.data;\r\n  })\r\n};\r\nconst handleItemClick = (node, data) => {\r\n  // 阻止默认点击行为（可选）\r\n  // node.handleClick() // 如果需要保留默认行为（如展开下级）\r\n\r\n  select(data.value)\r\n\r\n  console.log('点击节点:', {\r\n    level: node.level,\r\n    label: data.label,\r\n    value: data.value,\r\n    path: node.pathNodes.map(n => n.label) // 获取完整路径\r\n  })\r\n\r\n  // 这里可以执行你的自定义逻辑\r\n  // 例如：跳转路由、显示详细信息等\r\n}\r\nconst goToQuestion = (uid) => {\r\n  router.push({\r\n    path: `/problems/${uid}`,\r\n    params:{\r\n      qus : questions\r\n    }\r\n  })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.panel {\r\n  width: fit-content;\r\n  height: fit-content;\r\n}\r\n\r\n\r\n\r\n.bt {\r\n  display: grid;\r\n  grid-template-columns: repeat(19, 0fr);\r\n  grid-gap: 10px;\r\n  .el-button{\r\n    margin-left: 0;\r\n  }\r\n}\r\n\r\n.answered {\r\n  background-color: #6CC747;\r\n  color: #fff;\r\n}\r\n\r\n.current {\r\n  background-color: #58AAFB;\r\n  color: #fff;\r\n}\r\n\r\n\r\n</style>"],"mappings":";;;AA2BA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,GAAG,QAAO,KAAK;AACvB,SAAQC,SAAS,QAAO,YAAY;;;;;;;IAEpC,MAAMC,MAAM,GAAGD,SAAS,CAAC,CAAC;IAE1B,IAAIE,OAAO,GAAGH,GAAG,CAAC,EAAE,CAAC;IAErB,IAAII,oBAAoB,GAAGJ,GAAG,CAAC,CAAC,CAAC,CAAC;IAElCD,KAAK,CAACM,GAAG,CAAC,qCAAqC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MAClEJ,OAAO,CAACK,KAAK,GAAGD,QAAQ,CAACE,IAAI,CAACA,IAAI;IACpC,CAAC,CAAC;IAEF,IAAIC,SAAS,GAAGV,GAAG,CAAC,EAAE,CAAC;IAEvB,MAAMW,MAAM,GAAIC,GAAG,IAAK;MACtBb,KAAK,CAACM,GAAG,CAAC,+BAA+B,GAAGO,GAAG,CAAC,CAACN,IAAI,CAAEC,QAAQ,IAAK;QAClEG,SAAS,CAACF,KAAK,GAAGD,QAAQ,CAACE,IAAI;MACjC,CAAC,CAAC;IACJ,CAAC;IACD,MAAMI,eAAe,GAAGA,CAACC,IAAI,EAAEL,IAAI,KAAK;MACtC;MACA;;MAEAE,MAAM,CAACF,IAAI,CAACD,KAAK,CAAC;MAElBO,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE;QACnBC,KAAK,EAAEH,IAAI,CAACG,KAAK;QACjBC,KAAK,EAAET,IAAI,CAACS,KAAK;QACjBV,KAAK,EAAEC,IAAI,CAACD,KAAK;QACjBW,IAAI,EAAEL,IAAI,CAACM,SAAS,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACJ,KAAK,CAAC,CAAC;MACzC,CAAC,CAAC;;MAEF;MACA;IACF,CAAC;IACD,MAAMK,YAAY,GAAIC,GAAG,IAAK;MAC5BtB,MAAM,CAACuB,IAAI,CAAC;QACVN,IAAI,EAAE,aAAaK,GAAG,EAAE;QACxBE,MAAM,EAAC;UACLC,GAAG,EAAGjB;QACR;MACF,CAAC,CAAC;IACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}