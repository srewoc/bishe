{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"question-container\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  class: \"question-nav\"\n};\nconst _hoisted_4 = {\n  class: \"question-grid\"\n};\nconst _hoisted_5 = {\n  class: \"navigation-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_radio = _resolveComponent(\"el-radio\");\n  const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  return _openBlock(), _createBlock(_component_el_row, {\n    style: {\n      \"width\": \"35%\"\n    }\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" 左侧当前题目 \"), _createVNode(_component_el_col, {\n      span: 12\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"h3\", null, _toDisplayString($options.currentQuestion.title), 1 /* TEXT */), $options.currentQuestion.type === 'single' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_el_radio_group, {\n        modelValue: $data.currentAnswer,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.currentAnswer = $event),\n        onChange: $options.onAnswerChange\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.currentQuestion.options, (option, index) => {\n          return _openBlock(), _createBlock(_component_el_radio, {\n            key: index,\n            label: option\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(option), 1 /* TEXT */)]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"label\"]);\n        }), 128 /* KEYED_FRAGMENT */))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\", \"onChange\"])])) : _createCommentVNode(\"v-if\", true)])]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 右侧题目号 \"), _createVNode(_component_el_col, {\n      span: 12\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" 使用 grid 布局显示题目编号，每行 5 个 \"), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questions, (question, index) => {\n        return _openBlock(), _createBlock(_component_el_button, {\n          key: index,\n          class: _normalizeClass({\n            'answered': question.answered,\n            'current': $data.currentQuestionIndex === index\n          }),\n          onClick: $event => $options.goToQuestion(index)\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(index + 1) + \" \", 1 /* TEXT */), _createCommentVNode(\" 显示题号 \")]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"class\", \"onClick\"]);\n      }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" 导航按钮 \"), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_el_button, {\n        onClick: $options.previousQuestion,\n        disabled: $data.currentQuestionIndex === 0\n      }, {\n        default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\" 上一题 \")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\", \"disabled\"]), _createVNode(_component_el_button, {\n        onClick: $options.nextQuestion,\n        disabled: $data.currentQuestionIndex === $data.questions.length - 1\n      }, {\n        default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\" 下一题 \")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\", \"disabled\"]), _createVNode(_component_el_button, {\n        onClick: $options.submit,\n        disabled: $options.isSubmitDisabled,\n        type: \"primary\"\n      }, {\n        default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\" 提交 \")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\", \"disabled\"])])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["class","key","_createBlock","_component_el_row","style","default","_withCtx","_createCommentVNode","_createVNode","_component_el_col","span","_createElementVNode","_hoisted_1","_toDisplayString","$options","currentQuestion","title","type","_createElementBlock","_hoisted_2","_component_el_radio_group","modelValue","$data","currentAnswer","_cache","$event","onChange","onAnswerChange","_Fragment","_renderList","options","option","index","_component_el_radio","label","_createTextVNode","_","_hoisted_3","_hoisted_4","questions","question","_component_el_button","_normalizeClass","answered","currentQuestionIndex","onClick","goToQuestion","_hoisted_5","previousQuestion","disabled","nextQuestion","length","submit","isSubmitDisabled"],"sources":["C:\\Users\\C\\Desktop\\bishe\\src\\components\\student\\SingleChoice.vue"],"sourcesContent":["<template>\r\n  <el-row style=\"width: 35%\">\r\n    <!-- 左侧当前题目 -->\r\n    <el-col :span=\"12\">\r\n      <div class=\"question-container\">\r\n        <h3>{{ currentQuestion.title }}</h3>\r\n        <div v-if=\"currentQuestion.type === 'single'\">\r\n          <el-radio-group v-model=\"currentAnswer\" @change=\"onAnswerChange\">\r\n            <el-radio\r\n                v-for=\"(option, index) in currentQuestion.options\"\r\n                :key=\"index\"\r\n                :label=\"option\"\r\n            >\r\n              {{ option }}\r\n            </el-radio>\r\n          </el-radio-group>\r\n        </div>\r\n      </div>\r\n    </el-col>\r\n\r\n    <!-- 右侧题目号 -->\r\n    <el-col :span=\"12\">\r\n      <div class=\"question-nav\">\r\n        <!-- 使用 grid 布局显示题目编号，每行 5 个 -->\r\n        <div class=\"question-grid\">\r\n          <el-button\r\n              v-for=\"(question, index) in questions\"\r\n              :key=\"index\"\r\n              :class=\"{\r\n              'answered': question.answered,\r\n              'current': currentQuestionIndex === index\r\n            }\"\r\n              @click=\"goToQuestion(index)\"\r\n          >\r\n            {{ index + 1 }} <!-- 显示题号 -->\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 导航按钮 -->\r\n      <div class=\"navigation-buttons\">\r\n        <el-button @click=\"previousQuestion\" :disabled=\"currentQuestionIndex === 0\">\r\n          上一题\r\n        </el-button>\r\n        <el-button @click=\"nextQuestion\" :disabled=\"currentQuestionIndex === questions.length - 1\">\r\n          下一题\r\n        </el-button>\r\n        <el-button\r\n            @click=\"submit\"\r\n            :disabled=\"isSubmitDisabled\"\r\n            type=\"primary\"\r\n        >\r\n          提交\r\n        </el-button>\r\n      </div>\r\n    </el-col>\r\n  </el-row>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 题库数据\r\n      questions: [\r\n        { title: \"问题 1: 选择正确的选项\", type: \"single\", options: [\"A\", \"B\", \"C\", \"D\"], answered: false, answer: null },\r\n        { title: \"问题 2: 选择多个选项\", type: \"multiple\", options: [\"A\", \"B\", \"C\", \"D\"], answered: false, answer: [] },\r\n        { title: \"问题 3: 选择正确的选项\", type: \"single\", options: [\"A\", \"B\", \"C\", \"D\"], answered: false, answer: null },\r\n        { title: \"问题 4: 选择多个选项\", type: \"multiple\", options: [\"A\", \"B\", \"C\", \"D\"], answered: false, answer: [] },\r\n        { title: \"问题 5: 选择正确的选项\", type: \"single\", options: [\"A\", \"B\", \"C\", \"D\"], answered: false, answer: null },\r\n        { title: \"问题 6: 选择多个选项\", type: \"multiple\", options: [\"A\", \"B\", \"C\", \"D\"], answered: false, answer: [] },\r\n        { title: \"问题 7: 选择正确的选项\", type: \"single\", options: [\"A\", \"B\", \"C\", \"D\"], answered: false, answer: null },\r\n        { title: \"问题 8: 选择多个选项\", type: \"multiple\", options: [\"A\", \"B\", \"C\", \"D\"], answered: false, answer: [] },\r\n        { title: \"问题 9: 选择正确的选项\", type: \"single\", options: [\"A\", \"B\", \"C\", \"D\"], answered: false, answer: null },\r\n        { title: \"问题 10: 选择多个选项\", type: \"multiple\", options: [\"A\", \"B\", \"C\", \"D\"], answered: false, answer: [] },\r\n      ],\r\n      currentQuestionIndex: 0, // 当前题目索引\r\n      currentAnswer: [], // 当前题目的答案\r\n    };\r\n  },\r\n  computed: {\r\n    // 获取当前显示的题目\r\n    currentQuestion() {\r\n      return this.questions[this.currentQuestionIndex];\r\n    },\r\n    // 是否禁用提交按钮\r\n    isSubmitDisabled() {\r\n      // 如果有任何题目未答，则禁用提交按钮\r\n      return this.questions.some(question => !question.answered);\r\n    }\r\n  },\r\n  methods: {\r\n    // 跳转到指定题目\r\n    goToQuestion(index) {\r\n      this.currentQuestionIndex = index;\r\n      const currentQuestion = this.questions[index];\r\n\r\n      // 如果题目已答过，恢复答案\r\n      if (currentQuestion.answered) {\r\n        this.currentAnswer = Array.isArray(currentQuestion.answer) ? [...currentQuestion.answer] : currentQuestion.answer;\r\n      } else {\r\n        // 否则，不显示任何答案（保持空白状态）\r\n        this.currentAnswer = Array.isArray(currentQuestion.answer) ? [] : null;\r\n      }\r\n    },\r\n    // 下一题\r\n    nextQuestion() {\r\n      if (this.currentQuestionIndex < this.questions.length - 1) {\r\n        this.autoSaveAnswer(); // 自动保存答案\r\n        this.currentQuestionIndex++; // 跳转到下一题\r\n        this.restoreAnswerIfNeeded(); // 恢复下一个题目的答案（如果有）\r\n      }\r\n    },\r\n    // 上一题\r\n    previousQuestion() {\r\n      if (this.currentQuestionIndex > 0) {\r\n        this.autoSaveAnswer(); // 自动保存答案\r\n        this.currentQuestionIndex--; // 跳转到上一题\r\n        this.restoreAnswerIfNeeded(); // 恢复上一个题目的答案（如果有）\r\n      }\r\n    },\r\n    // 自动保存答案\r\n    autoSaveAnswer() {\r\n      const currentQuestion = this.questions[this.currentQuestionIndex];\r\n      // 只有在当前题目有答案时才保存\r\n      if (this.currentAnswer !== null && this.currentAnswer.length > 0) {\r\n        currentQuestion.answer = this.currentAnswer; // 保存答案\r\n        currentQuestion.answered = true; // 标记为已答\r\n      }\r\n    },\r\n    // 恢复答案，如果已经答过\r\n    restoreAnswerIfNeeded() {\r\n      const currentQuestion = this.questions[this.currentQuestionIndex];\r\n      if (currentQuestion.answered) {\r\n        this.currentAnswer = Array.isArray(currentQuestion.answer) ? [...currentQuestion.answer] : currentQuestion.answer;\r\n      } else {\r\n        this.currentAnswer = Array.isArray(currentQuestion.answer) ? [] : null;\r\n      }\r\n    },\r\n    // 回答选项变化时，自动保存\r\n    onAnswerChange() {\r\n      this.autoSaveAnswer();\r\n      // 移除自动跳转的逻辑，完全由用户控制\r\n    },\r\n    // 提交答案\r\n    submit() {\r\n      if (this.isSubmitDisabled) {\r\n        this.$message.warning(\"请完成所有题目后再提交！\");\r\n      } else {\r\n        alert(\"已提交答案！\");\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 左侧题目 */\r\n.question-container {\r\n  padding: 20px;\r\n  background-color: #fff;\r\n}\r\n\r\n.navigation-buttons {\r\n  margin-top: 20px;\r\n}\r\n\r\n.question-grid {\r\n  width: 200px;\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr); /* 每行 5 个题目 */\r\n  grid-gap: 10px;\r\n  .el-button{\r\n    margin-left: 0;\r\n  }\r\n}\r\n\r\n.question-grid .el-button {\r\n  width: 40px; /* 使按钮宽度自适应 */\r\n  height: 40px; /* 统一按钮高度 */\r\n  padding: 0;\r\n}\r\n\r\n.answered {\r\n  background-color: #6CC747; /* 已答题按钮绿色 */\r\n  color: #fff;\r\n}\r\n\r\n.current {\r\n  background-color: #58AAFB; /* 当前题目按钮蓝色 */\r\n  color: #fff;\r\n}\r\n\r\n.el-button[disabled] {\r\n  background-color: #dcdcdc;\r\n}\r\n\r\n.el-radio-group,\r\n.el-checkbox-group {\r\n  display: block;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}